{
    "usage": "Persist this file inside your repositories as .codescene/code-health-rules.json Keep the rules you want to override, remove the rest for simplicity and an easy overview.Override the code health rules by changing the default 1.0 value to a lower relative weight. A value of 0.0 disables the rule. A value of 0.5 still implies a code health hit but only at 50% of the default impact. Note that you can specify multiple rule sets and use the matching-content-path to control to which parts or languages the rules apply. This makes it possible to differentiate between test vs application code, or tailor rules to specific languages. In case multiple rule sets match a piece of content, then we prioritize the first mathcing set of rules.",
    "rule_sets": [{
        "matching_content_path": "**/*",
        "matching_content_path_doc": "Specify a glob pattern relative to this repo root. **/* means all code, **/*.js means just JavaScript, test/** means all code in a top-level test folder.",
        "rules": [{
            "name": "Low Cohesion",
            "weight": 1.0
        }, {
            "name": "Brain Method",
            "weight": 0.5
        }, {
            "name": "Complex Method",
            "weight": 0.5
        }, {
            "name": "Bumpy Road Ahead",
            "weight": 0.0
        }, {
            "name": "Deep, Nested Complexity",
            "weight": 0.5
        }, {
            "name": "Deep, Global Nested Complexity",
            "weight": 1.0
        }, {
            "name": "Code Duplication",
            "weight": 1.0
        }, {
            "name": "Overall Code Complexity",
            "weight": 1.0
        }, {
            "name": "Global Conditionals",
            "weight": 1.0
        }, {
            "name": "Lines of Code in a Single File",
            "weight": 0.5
        }, {
            "name": "Lines of Declarations in a Single File",
            "weight": 1.0
        }, {
            "name": "Number of Functions in a Single Module",
            "weight": 1.0
        }, {
            "name": "Overall Function Size",
            "weight": 1.0
        }, {
            "name": "Large Method",
            "weight": 1.0
        }, {
            "name": "Missing Arguments Abstractions",
            "weight": 1.0
        }, {
            "name": "Primitive Obsession",
            "weight": 1.0
        }, {
            "name": "Excess Number of Function Arguments",
            "weight": 1.0
        }, {
            "name": "Constructor Over-Injection",
            "weight": 1.0
        }, {
            "name": "String Heavy Function Arguments",
            "weight": 1.0
        }, {
            "name": "Large Assertion Blocks",
            "weight": 1.0
        }, {
            "name": "Duplicated Assertion Blocks",
            "weight": 1.0
        }]
    }]
}